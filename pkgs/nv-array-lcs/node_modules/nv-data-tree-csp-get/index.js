const gn=require("nv-data-tree-csp-gen"),ndget=require("nv-data-tree-csp-ndget"),ndgen=require("nv-data-tree-csp-ndgen"),getwnd=require("nv-data-tree-csp-getwnd"),cspact=require("nv-data-tree-csp-act"),__ME={$depth_:(n,e,_,t,s,g,d,r,c)=>gn.count(gn.$ance(t,d[0])),$children_count_:(n,e,_,t,s,g,d,r,c)=>gn.count(gn.$fch(e,_,d[0])),$sibseq_:(n,e,_,t,s,g,d,r,c)=>gn.seq(gn.$sibff(e,_,t,d[0]),d[0]),$sibs_count_:(n,e,_,t,s,g,d,r,c)=>gn.count(gn.$sibff(e,_,t,d[0])),$psibs_count_:(n,e,_,t,s,g,d,r,c)=>gn.count(gn.$psib(s,d[0])),$fsibs_count_:(n,e,_,t,s,g,d,r,c)=>gn.count(gn.$fsib(_,d[0])),$spl_:(n,e,_,t,s,g,d,r,c)=>{let f=gn.reverse_then_push_self(gn.$ance(t,d[0]),d[0]);return f=f.slice(1),f.map(n=>gn.seq(gn.$sibff(e,_,t,n),n))},$length_:(n,e,_,t,s,g,d,r,c)=>gn.count(ndgen.$gen_sdfs_next(n,e,_,t,s,g,d,r,c)),$width_:(n,e,_,t,s,g,d,r,c)=>gn.count(ndgen.$gen_sdfs_next_leaf(n,e,_,t,s,g,d,r,c)),$nonleaf_length_:(n,e,_,t,s,g,d,r,c)=>gn.count(ndgen.$gen_sdfs_next_nonleaf(n,e,_,t,s,g,d,r,c)),$offset_:(n,e,_,t,s,g,d,r,c)=>{c=ndget.$root_(n,e,_,t,s,g,d,r,c);return getwnd.$des_offset(n,e,_,t,s,g,[d[0],c],r)}};["sdfs_next_srch_action_list","sdfs_next_build_action_list","sdfs_prev_srch_action_list","sdfs_prev_build_action_list"].forEach(f=>{__ME["$"+f+"_"]=(n,e,_,t,s,g,d,r,c)=>Array.from(cspact["$gen_"+f.replace("_list","")](n,e,_,t,s,g,d,r,c))}),__ME.$height_=(n,e,_,t,s,g,d,r,c)=>{let f=1,a=f;var $;for($ of cspact.$gen_sdfs_next_srch_action(n,e,_,t,s,g,[d[0]],r,c))"$fstch_"===$.k?f+=1:"$parent_"===$.k&&(f-=1),f>a&&(a=f);return a};const _dfs_index=(n,e,_,t,s,g,d,r,c,f)=>{var a=ndget.$root_(e,_,t,s,g,d,r,c,f),a=n.includes("sdfs")?a:ndget.$dlmost_(e,_,t,s,g,d,[a],c,f),f=ndgen[n](e,_,t,s,g,d,[a],c,f);return gn.seq(f,r[0])};["$gen_sdfs_next","$gen_sdfs_next_leaf","$gen_sdfs_next_nonleaf","$gen_edfs_next","$gen_edfs_next_leaf","$gen_edfs_next_nonleaf"].forEach(f=>{var n=f.replace("gen_","").replace("_next","")+"_index_";__ME[n]=(n,e,_,t,s,g,d,r,c)=>_dfs_index(f,n,e,_,t,s,g,d,r,c)}),module.exports=__ME;